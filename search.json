[{"path":"https://timtaylor.github.io/qalytools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Crown Copyright (UK Health Security Agency) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://timtaylor.github.io/qalytools/articles/example_analysis.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Example analysis","text":"Lorem ipsum dolor sit amet, mollis gravida dictum mauris enim. Ut, vel cum, commodo nulla . Sed arcu euismod adipiscing, ut. fames maximus mus nunc velit mus sed ut primis et. Lorem vestibulum sed eu sit dolor risus. , tempus ac dui nullam, ut, est et sed quis. Nec eros. Varius condimentum ut ligula vel vitae parturient erat diam. convallis. Pharetra interdum diam congue scelerisque et nisi egestas id pharetra. Inceptos, litora libero, augue congue consequat ipsum ultrices, eget tellus. Amet, donec urna luctus cursus varius ante. Ipsum pellentesque parturient tortor donec turpis ligula rutrum ac. Augue auctor cursus justo litora placerat est montes sed! Torquent velit tincidunt. Fermentum conubia laoreet. Porta eu sed, lobortis consectetur hendrerit eget, mauris nulla cum justo. Lorem per rutrum cras inceptos tempus et amet sit quis aenean diam. Torquent non felis sodales scelerisque, pharetra mi rutrum.","code":""},{"path":"https://timtaylor.github.io/qalytools/articles/example_analysis.html","id":"overview-of-data","dir":"Articles","previous_headings":"","what":"Overview of data","title":"Example analysis","text":"Consectetur libero morbi nisl sapien. lorem imperdiet id. Proin suspendisse purus sapien aliquam sed ac ante eu pellentesque. Et massa tempus sed diam aenean, quis augue. Sed primis scelerisque turpis donec orci consectetur vivamus montes, eu. Et elementum. Amet proin augue quisque vitae dui sed sed primis sed. Ac sed purus mauris blandit. elementum tempor lacinia vitae cras dictumst, nisi odio. Blandit potenti donec. Eget ultricies . Lectus nec ridiculus lobortis nunc dis. Condimentum, ante gravida, parturient, sed netus praesent sed eget vel. inceptos viverra lorem vestibulum aliquam ut eu ut imperdiet eleifend. Dictumst cras fusce egestas pellentesque sociis. Placerat vestibulum imperdiet sed, duis ipsum. Cum mollis non facilisis facilisis non, viverra vehicula. semper mauris sit lacinia taciti aliquam ipsum habitant faucibus pellentesque ac sed.","code":""},{"path":"https://timtaylor.github.io/qalytools/articles/example_analysis.html","id":"descriptive-analysis","dir":"Articles","previous_headings":"","what":"Descriptive analysis","title":"Example analysis","text":"Ut et aenean aptent vestibulum metus auctor non. Vel, pellentesque aptent mi penatibus sit ex. Tincidunt dui ut aliquam non, fermentum quisque ligula justo. Faucibus ipsum ut sed dui tellus. Nibh augue fermentum metus sed sed accumsan egestas dui. Id nec lectus nascetur, cursus nascetur purus. Mauris odio et, ultrices montes urna taciti nunc dui vestibulum imperdiet quis integer , turpis. Aliquam, ac ut, tincidunt tempus eu mattis condimentum nisl. Faucibus quam egestas magna amet amet sed id ut, quisque.","code":""},{"path":"https://timtaylor.github.io/qalytools/articles/example_analysis.html","id":"modelling-of-utilities","dir":"Articles","previous_headings":"","what":"Modelling of utilities","title":"Example analysis","text":"Nibh turpis et, iaculis mus habitant egestas penatibus odio. Turpis lacus scelerisque nulla condimentum, aliquam ut dignissim ullamcorper sed habitant. sapien erat viverra cras metus egestas . Enim, phasellus ante nibh, nibh. Eleifend justo per sit risus dolor. Non odio, non mauris porttitor interdum aenean, dapibus luctus amet, sem venenatis. Est amet mauris interdum ridiculus tristique morbi et vitae. Congue accumsan iaculis, ut mauris non inceptos, nisi dignissim. Neque est sit elementum lobortis, sed sed et. Tortor, blandit sociosqu suspendisse consectetur neque sociosqu eros phasellus tincidunt lorem. Non egestas, cursus potenti, ultricies interdum, quam egestas. Ut, fringilla augue , vehicula et nam, nunc. Torquent, pellentesque metus, morbi senectus magna consectetur id lorem et. Quis, efficitur commodo commodo eu eget. Ut nunc. Tempor nec habitant, ut ornare suspendisse et ut. Risus id lacinia blandit vestibulum dui vehicula, cubilia sed, sed. Non , lacus turpis potenti elit. dolor sit fermentum purus viverra. Vitae velit, lacus. Et mattis praesent eros turpis nisl amet metus. Laoreet litora nec aenean euismod sagittis. Condimentum quam tristique egestas tincidunt eu metus ac leo potenti magna senectus augue. nibh auctor maximus sed tortor cubilia sodales. Mauris volutpat justo risus diam aliquam libero. Nisi cum sollicitudin felis senectus conubia.","code":""},{"path":"https://timtaylor.github.io/qalytools/articles/example_analysis.html","id":"final-analysis","dir":"Articles","previous_headings":"","what":"Final Analysis","title":"Example analysis","text":"Class tincidunt eget morbi, sociis pharetra ligula ante dolor fermentum lacus tincidunt. Elit, semper donec. Urna mollis sem ipsum turpis morbi risus pulvinar. Laoreet leo vel praesent tristique non. Sed porttitor ac orci, cursus montes quis ut. Rhoncus, integer conubia nibh risus vehicula sollicitudin magna. Amet mattis sodales faucibus vulputate, porttitor vel mattis quis . Ligula faucibus molestie varius, fringilla habitasse primis ut. Massa magna eget ex quam, metus aliquet viverra, euismod nec, dignissim nulla torquent? Et sit luctus cras est et rutrum nec quis. Ut ultricies consequat habitasse nostra conubia et tempor venenatis, iaculis lacus netus. Volutpat tincidunt tortor viverra fames platea augue quis. Mollis, potenti nisi gravida.","code":""},{"path":"https://timtaylor.github.io/qalytools/articles/example_analysis.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Example analysis","text":"Nunc augue scelerisque habitasse mi, eros sit, mollis. Risus primis ad vitae tellus sociosqu quis, auctor ut vel nostra. Vestibulum morbi ut tempor justo nibh convallis adipiscing nibh ut! Platea suscipit sed vestibulum eu vitae, conubia pharetra. Tincidunt, eget massa mauris laoreet, vel, quam ut sodales iaculis. Et magnis ut, sed libero quis vitae. Sed ridiculus, id platea ligula cubilia taciti inceptos, habitant nibh tempor sed cubilia, lorem. Nisl feugiat dapibus conubia nulla ut aenean et.","code":""},{"path":"https://timtaylor.github.io/qalytools/articles/surveyTools.html","id":"the-eq5d-object-class","dir":"Articles","previous_headings":"","what":"The EQ5D object class","title":"qalytools","text":"define EQ5D object table containing data long format meets following criteria: contains columns represent dimensions EQ5D survey specification well column representing Visual Analogue Score (columns ‘mobility’, ‘self_care’, ‘usual’, ‘pain’, ‘anxiety’ ‘vas’ example table ) Dimension values must whole numbers, bounded 1 3 EQ5D3L EQ5D3Y surveys bounded 1 5 EQ5D5L surveys contains column acts unique respondent identifier (respondentID) another identifying different surveys time (`surveyID). Together uniquely identify response (.e. combination duplicated within given data frame). contains column provides relative time (e.g. days/weeks) response within survey framework (‘time_index’). qalytools implement objects data frame subclass provide functionality coerce input representation via functions as_eq5d3l(), as_eq5d5l() as_eq5dy(). Example EQ5D5L object","code":""},{"path":"https://timtaylor.github.io/qalytools/articles/surveyTools.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"qalytools","text":"coercing data EQ5D5L object must ensure surveys explicit ordering. converting surveyID variable ordered factor prior call as_eq5d5l(). obtain quick overview data can call summary(). default returns output list data frames, showing frequency counts proportions, split surveyID Alternatively can set parameter tidy TRUE obtain summary data “tidy” (long) format. try coerce object meet required criteria, function error informative message.","code":"library(qalytools) library(ggplot2)  # Example EQ5D5L data  data(\"EQ5D5L_surveys\") str(EQ5D5L_surveys) #> Classes 'tbl' and 'data.frame':  10000 obs. of  12 variables: #>  $ surveyID    : chr  \"survey01\" \"survey02\" \"survey03\" \"survey04\" ... #>  $ respondentID: int  1 1 1 1 1 1 1 1 1 1 ... #>  $ sex         : chr  \"Female\" \"Female\" \"Female\" \"Female\" ... #>  $ age         : int  25 25 25 25 25 25 25 25 25 25 ... #>  $ mobility    : int  2 1 1 1 1 2 2 1 1 2 ... #>  $ self_care   : int  1 4 5 2 2 1 1 1 3 1 ... #>  $ usual       : int  2 5 2 5 3 1 2 2 2 2 ... #>  $ pain        : int  1 5 1 2 3 2 1 2 1 1 ... #>  $ anxiety     : int  1 3 3 2 1 1 1 1 1 1 ... #>  $ time_index  : num  30 60 90 120 150 180 210 240 270 300 ... #>  $ vas         : num  96 22 61 65 78 88 85 95 94 87 ... #>  $ dummy       : logi  TRUE FALSE TRUE TRUE FALSE TRUE ... dat <- EQ5D5L_surveys dat$surveyID <- as.factor(dat$surveyID)  dat <- as_eq5d5l(     dat,     mobility = \"mobility\",     self_care = \"self_care\",     usual = \"usual\",     pain = \"pain\",     anxiety = \"anxiety\",     respondentID = \"respondentID\",     surveyID = \"surveyID\",     vas = \"vas\",     time_index = \"time_index\" )  dat #> # EQ-5D-5L: 10,000 x 12 #>    surveyID respondentID sex      age mobility self_care usual  pain anxiety #>  * <fct>           <int> <chr>  <int>    <int>     <int> <int> <int>   <int> #>  1 survey01            1 Female    25        2         1     2     1       1 #>  2 survey02            1 Female    25        1         4     5     5       3 #>  3 survey03            1 Female    25        1         5     2     1       3 #>  4 survey04            1 Female    25        1         2     5     2       2 #>  5 survey05            1 Female    25        1         2     3     3       1 #>  6 survey06            1 Female    25        2         1     1     2       1 #>  7 survey07            1 Female    25        2         1     2     1       1 #>  8 survey08            1 Female    25        1         1     2     2       1 #>  9 survey09            1 Female    25        1         3     2     1       1 #> 10 survey10            1 Female    25        2         1     2     1       1 #> # … with 9,990 more rows, and 3 more variables: time_index <dbl>, vas <dbl>, #> #   dummy <lgl> head(summary(dat), n = 2) #> $survey01 #> # A data frame: 6 × 6 #>   value mobility self_care usual  pain anxiety #>   <dbl>    <dbl>     <dbl> <dbl> <dbl>   <dbl> #> 1     1      666       608   401   320     574 #> 2     2      196       131   303   359     235 #> 3     3      114       205   166   287     150 #> 4     4       19        18    61    24      29 #> 5     5        5        38    69    10      12 #> 6    NA        0         0     0     0       0 #>  #> $survey02 #> # A data frame: 6 × 6 #>   value mobility self_care usual  pain anxiety #>   <dbl>    <dbl>     <dbl> <dbl> <dbl>   <dbl> #> 1     1      396       106   142    26      47 #> 2     2      248       169   177    71      92 #> 3     3      194       214   160    93     103 #> 4     4       83       277   237   364     381 #> 5     5       79       234   284   446     377 #> 6    NA        0         0     0     0       0 summary(dat, tidy = TRUE) #> # A data frame: 300 × 4 #>    surveyID dimension value count #>    <chr>    <fct>     <dbl> <dbl> #>  1 survey01 mobility      1   666 #>  2 survey01 mobility      2   196 #>  3 survey01 mobility      3   114 #>  4 survey01 mobility      4    19 #>  5 survey01 mobility      5     5 #>  6 survey01 mobility     NA     0 #>  7 survey01 self_care     1   608 #>  8 survey01 self_care     2   131 #>  9 survey01 self_care     3   205 #> 10 survey01 self_care     4    18 #> # … with 290 more rows # Incorrect bounds for dimension values will cause an error as_eq5d3l(     EQ5D5L_surveys,     mobility = \"mobility\",     self_care = \"self_care\",     usual = \"usual\",     pain = \"pain\",     anxiety = \"anxiety\",     respondentID = \"respondentID\",     surveyID = \"surveyID\",     vas = \"vas\",     time_index = \"time_index\" ) #> Error in `validate_eq5d()`: #> ! Dimensions must be either bounded by 1 and 3, or NA  # Dimension values that are not whole numbers will cause an error EQ5D5L_surveys[1,5] <- 1.5 as_eq5d5l(     EQ5D5L_surveys,     mobility = \"mobility\",     self_care = \"self_care\",     usual = \"usual\",     pain = \"pain\",     anxiety = \"anxiety\",     respondentID = \"respondentID\",     surveyID = \"surveyID\",     vas = \"vas\",     time_index = \"time_index\" ) #> Error in `validate_eq5d()`: #> ! Dimension values must be whole numbers or NA"},{"path":"https://timtaylor.github.io/qalytools/articles/surveyTools.html","id":"available-value-sets","dir":"Articles","previous_headings":"Usage","what":"Available value sets","title":"qalytools","text":"created EQ5D objects can think value sets use calculation utility values subsequent QALY metrics. can obtain list compatible value sets (across countries type) passing EQ5D object directly available_valuesets() function passing comparable string. EQ5D3L inputs type can : “TTO”, time trade-valuation technique; “VAS”, visual analogue scale valuation technique; “RCW”, reverse crosswalk conversion EQ5D5L values; “DSU”, NICE Decision Support Unit’s model allows mappings EQ5D5L values accounting age sex. EQ5D5L inputs can : “VT”, value sets generated via EuroQol standardised valuation study protocol; “CW”, crosswalk conversion EQ5D3L values; “DSU”, NICE Decision Support Unit’s model allows mappings EQ5D5L values accounting age sex. Note function purely convenience wrapper around eq5d::valuesets() function. return data frame columns representing EQ5D version, value set country value set type. details available value sets please consult documentation wrapped package via vignette(topic = \"eq5d\", package = \"eq5d\").","code":"vs <- available_valuesets(dat) head(vs, 10) #> # A data frame: 10 × 3 #>    Version  Type  Country  #>  * <chr>    <chr> <chr>    #>  1 EQ-5D-5L VT    Belgium  #>  2 EQ-5D-5L VT    Canada   #>  3 EQ-5D-5L VT    China    #>  4 EQ-5D-5L VT    Denmark  #>  5 EQ-5D-5L VT    Egypt    #>  6 EQ-5D-5L VT    England  #>  7 EQ-5D-5L VT    Ethiopia #>  8 EQ-5D-5L VT    France   #>  9 EQ-5D-5L VT    Germany  #> 10 EQ-5D-5L VT    HongKong identical(vs, available_valuesets(\"eq5d5l\")) #> [1] TRUE identical(vs, available_valuesets(\"EQ5D5L\")) #> [1] TRUE identical(vs, available_valuesets(\"EQ-5D-5L\")) #> [1] TRUE"},{"path":"https://timtaylor.github.io/qalytools/articles/surveyTools.html","id":"calculating-utility-values","dir":"Articles","previous_headings":"Usage","what":"Calculating utility values","title":"qalytools","text":"calculate utility values call calculate_utility EQ5D object additional arguments specifying countries type interested . Note function error type country arguments different length, exception made inputs length one recycled necessary length.","code":"# Example 1 vs_dat <- vs[vs$Country %in% c(\"England\", \"Ireland\", \"Germany\", \"UK\", \"USA\"),] vs_dat <- vs_dat[vs_dat$Type %in% c(\"VT\", \"CW\"),] calculate_utility(dat, type = vs_dat$Type, country = vs_dat$Country) #> # A data frame: 70,000 × 5 #>    respondentID surveyID .utility_country .utility_type .value #>  *        <int> <fct>    <chr>            <chr>          <dbl> #>  1            1 survey01 England          VT             0.892 #>  2            1 survey02 England          VT             0.213 #>  3            1 survey03 England          VT             0.643 #>  4            1 survey04 England          VT             0.625 #>  5            1 survey05 England          VT             0.803 #>  6            1 survey06 England          VT             0.879 #>  7            1 survey07 England          VT             0.892 #>  8            1 survey08 England          VT             0.887 #>  9            1 survey09 England          VT             0.87  #> 10            1 survey10 England          VT             0.892 #> # … with 69,990 more rows  # Example 2 - cross walk comparison vs_dat <- vs_dat[vs_dat$Country %in% c(\"England\", \"UK\"),] util <- calculate_utility(dat, type = vs_dat$Type, country = vs_dat$Country)  # plot the results util$fill <- paste(util$.utility_country, util$.utility_type) ggplot(util, aes(x = surveyID, y = .value, fill = fill)) +     geom_boxplot(lwd = 1, outlier.shape = 4) +     stat_summary(         mapping = aes(group = .utility_country),         fun = mean,         geom = \"point\",         position = position_dodge(width = 0.75),         shape = 21,         color = \"black\",         fill = \"white\"     ) +     theme_light() +     geom_hline(yintercept = 0, linetype = \"longdash\", size = 0.6, color = \"grey30\") +     scale_y_continuous(n.breaks = 10, expand = c(0.005, 0.005)) +     scale_x_discrete(name = \"value set\")"},{"path":"https://timtaylor.github.io/qalytools/articles/surveyTools.html","id":"qaly-calculations","dir":"Articles","previous_headings":"Usage","what":"QALY calculations","title":"qalytools","text":"Quality life years can calculated directly utility values. default, two different metrics provided. Firstly, “raw” value simply scaled area utility curve , secondly, value represents loss full health.","code":"qalys <-      dat |>      add_utility(type = \"VT\", country = c(\"Denmark\", \"France\")) |>      calculate_qalys(time_index = \"time_index\")  subset(qalys, .qaly==\"raw\") #> # A data frame: 2,000 × 5 #>    respondentID .utility_type .utility_country .qaly .value #>  *        <int> <chr>         <chr>            <chr>  <dbl> #>  1            1 VT            Denmark          raw    0.544 #>  2            1 VT            France           raw    0.573 #>  3            2 VT            Denmark          raw    0.487 #>  4            2 VT            France           raw    0.503 #>  5            3 VT            Denmark          raw    0.530 #>  6            3 VT            France           raw    0.577 #>  7            4 VT            Denmark          raw    0.276 #>  8            4 VT            France           raw    0.430 #>  9            5 VT            Denmark          raw    0.506 #> 10            5 VT            France           raw    0.575 #> # … with 1,990 more rows subset(qalys, .qaly==\"loss_vs_fullhealth\") #> # A data frame: 2,000 × 5 #>    respondentID .utility_type .utility_country .qaly              .value #>  *        <int> <chr>         <chr>            <chr>               <dbl> #>  1            1 VT            Denmark          loss_vs_fullhealth  0.195 #>  2            1 VT            France           loss_vs_fullhealth  0.166 #>  3            2 VT            Denmark          loss_vs_fullhealth  0.252 #>  4            2 VT            France           loss_vs_fullhealth  0.237 #>  5            3 VT            Denmark          loss_vs_fullhealth  0.210 #>  6            3 VT            France           loss_vs_fullhealth  0.162 #>  7            4 VT            Denmark          loss_vs_fullhealth  0.463 #>  8            4 VT            France           loss_vs_fullhealth  0.310 #>  9            5 VT            Denmark          loss_vs_fullhealth  0.233 #> 10            5 VT            France           loss_vs_fullhealth  0.164 #> # … with 1,990 more rows"},{"path":"https://timtaylor.github.io/qalytools/articles/surveyTools.html","id":"comparison-to-a-baseline","dir":"Articles","previous_headings":"Usage","what":"Comparison to a baseline","title":"qalytools","text":"calculate_qalys() also allows us calculate loss specified baseline one two ways. Firstly, character string baseline_survey argument can placed matches survey present utility data. argument passed utility values specified survey used calculate loss. Note survey still included raw, unadjusted calculation, prior calculation loss. Alternatively baseline_survey argument can specified data frame column corresponding respondentID another representing associated utility. Optionally columns corresponding utility country utility type can included allow granular comparisons. Note specification baseline, included unadjusted, raw, calculation.","code":"# Reload the example data and combine with some baseline measurements data(\"EQ5D5L_surveys\") dat <-      EQ5D5L_surveys |>      transform(surveyID = as.factor(surveyID)) |>      as_eq5d5l(         mobility = \"mobility\",         self_care = \"self_care\",         usual = \"usual\",         pain = \"pain\",         anxiety = \"anxiety\",         respondentID = \"respondentID\",         surveyID = \"surveyID\",         vas = \"vas\"     )  add_utility(dat, type = \"VT\", country = c(\"Denmark\", \"France\")) |>      calculate_qalys(baseline_survey = \"survey01\", time_index = \"time_index\") |>      subset(.qaly == \"loss_vs_baseline\") #> # A data frame: 2,000 × 5 #>    respondentID .utility_country .utility_type .qaly              .value #>  *        <int> <chr>            <chr>         <chr>               <dbl> #>  1            1 Denmark          VT            loss_vs_baseline  0.141   #>  2            1 France           VT            loss_vs_baseline  0.114   #>  3            2 Denmark          VT            loss_vs_baseline  0.0892  #>  4            2 France           VT            loss_vs_baseline -0.00370 #>  5            3 Denmark          VT            loss_vs_baseline  0.0965  #>  6            3 France           VT            loss_vs_baseline  0.106   #>  7            4 Denmark          VT            loss_vs_baseline  0.175   #>  8            4 France           VT            loss_vs_baseline  0.0450  #>  9            5 Denmark          VT            loss_vs_baseline  0.142   #> 10            5 France           VT            loss_vs_baseline  0.0915  #> # … with 1,990 more rows split_dat <- split(dat, dat$surveyID==\"survey01\") surveys <- split_dat[[1]] baseline <- split_dat[[2]] utility_dat <- add_utility(     surveys,     type = \"VT\",     country = c(\"Denmark\", \"France\") ) baseline_utility <-      baseline |>      add_utility(type = \"VT\", country = c(\"Denmark\", \"France\")) |>      subset(select=c(respondentID,.utility_country,.utility_type,.value))  calculate_qalys(utility_dat, baseline_survey = baseline_utility, time_index = \"time_index\") |>      subset(.qaly == \"loss_vs_baseline\") #> # A data frame: 2,000 × 5 #>    respondentID .utility_country .utility_type .qaly             .value #>  *        <int> <chr>            <chr>         <chr>              <dbl> #>  1            1 Denmark          VT            loss_vs_baseline  0.101  #>  2            1 France           VT            loss_vs_baseline  0.0796 #>  3            2 Denmark          VT            loss_vs_baseline  0.0556 #>  4            2 France           VT            loss_vs_baseline -0.0341 #>  5            3 Denmark          VT            loss_vs_baseline  0.0672 #>  6            3 France           VT            loss_vs_baseline  0.0788 #>  7            4 Denmark          VT            loss_vs_baseline  0.145  #>  8            4 France           VT            loss_vs_baseline  0.0182 #>  9            5 Denmark          VT            loss_vs_baseline  0.0959 #> 10            5 France           VT            loss_vs_baseline  0.0553 #> # … with 1,990 more rows"},{"path":"https://timtaylor.github.io/qalytools/articles/surveyTools.html","id":"calculate-limitations","dir":"Articles","previous_headings":"Usage","what":"Calculate limitations","title":"qalytools","text":"","code":"(limitation <- calculate_limitation(dat)) #> # A data frame: 50 × 3 #>    surveyID dimension without_limitation #>    <fct>    <fct>                  <dbl> #>  1 survey01 mobility               0.666 #>  2 survey02 mobility               0.396 #>  3 survey03 mobility               0.647 #>  4 survey04 mobility               0.637 #>  5 survey05 mobility               0.613 #>  6 survey06 mobility               0.637 #>  7 survey07 mobility               0.645 #>  8 survey08 mobility               0.651 #>  9 survey09 mobility               0.642 #> 10 survey10 mobility               0.671 #> # … with 40 more rows  ggplot(limitation, aes(x = surveyID, y = without_limitation, group = dimension)) +     geom_line(aes(colour = dimension)) +     theme_light() +     scale_y_continuous(n.breaks = 10, expand = c(0.005, 0.005), limits = c(0, 1)) +     scale_x_discrete() +     scale_fill_discrete(name = \"dimension\") +     ylab(\"Without limitation\")"},{"path":"https://timtaylor.github.io/qalytools/articles/surveyTools.html","id":"paretian-classification-of-health-change-pchc","dir":"Articles","previous_headings":"Usage","what":"Paretian Classification of Health Change (PCHC)","title":"qalytools","text":"","code":"data(\"eq5d3l_example\") dat <- as_eq5d3l(     eq5d3l_example,     respondentID = \"respondentID\",     surveyID = \"surveyID\",     time_index = \"time\",     mobility = \"MO\",     self_care = \"SC\",     usual = \"UA\",     pain = \"PD\",     anxiety = \"AD\",     vas = \"vas\",     drop = FALSE # ensure we do not drop additional columns )  grp1 <- subset(dat, Group == \"Group1\") grp2 <- subset(dat, Group == \"Group2\") calculate_pchc(grp1, grp2) #> # A data frame: 5 × 3 #>   Change       Number Percent #>   <chr>         <dbl>   <dbl> #> 1 No change        14      14 #> 2 Improve          59      59 #> 3 Worsen           14      14 #> 4 Mixed change     13      13 #> 5 No problems       0       0 calculate_pchc(grp1, grp2, by.dimension = TRUE) #> # A data frame: 20 × 4 #>    .Dimension Change      Number Percent #>    <chr>      <chr>        <dbl>   <dbl> #>  1 MO         No change       31      31 #>  2 MO         Improve         26      26 #>  3 MO         Worsen           7       7 #>  4 MO         No problems     36      36 #>  5 SC         No change       21      21 #>  6 SC         Improve         31      31 #>  7 SC         Worsen           7       7 #>  8 SC         No problems     41      41 #>  9 UA         No change       33      33 #> 10 UA         Improve         43      43 #> 11 UA         Worsen           6       6 #> 12 UA         No problems     18      18 #> 13 PD         No change       59      59 #> 14 PD         Improve         34      34 #> 15 PD         Worsen           3       3 #> 16 PD         No problems      4       4 #> 17 AD         No change       14      14 #> 18 AD         Improve         22      22 #> 19 AD         Worsen          12      12 #> 20 AD         No problems     52      52"},{"path":"https://timtaylor.github.io/qalytools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Crown Copyright. Copyright holder, funder. Tim Taylor. Author, maintainer.","code":""},{"path":"https://timtaylor.github.io/qalytools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Taylor T (2022). qalytools: Tools Analysing EQ5D Surveys. https://github.com/TimTaylor/surveyTools, https://timtaylor.github.io/surveyTools/.","code":"@Manual{,   title = {qalytools: Tools for Analysing EQ5D Surveys},   author = {Tim Taylor},   year = {2022},   note = {https://github.com/TimTaylor/surveyTools, https://timtaylor.github.io/surveyTools/}, }"},{"path":"https://timtaylor.github.io/qalytools/index.html","id":"qalytools","dir":"","previous_headings":"","what":"Tools for Analysing EQ5D Surveys","title":"Tools for Analysing EQ5D Surveys","text":"qalytools provides simple intuitive user interface analysis EQ-5D surveys. builds upon eq5d package facilitate calculation QALY values, related metrics, across multiple surveys.","code":""},{"path":"https://timtaylor.github.io/qalytools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Analysing EQ5D Surveys","text":"development version package can installed via:","code":"repos <- c(\"https://timtaylor.r-universe.dev\", getOption(\"repos\"))     install.packages(\"qalytools\", repos = repos)"},{"path":"https://timtaylor.github.io/qalytools/index.html","id":"guidance","dir":"","previous_headings":"","what":"Guidance","title":"Tools for Analysing EQ5D Surveys","text":"installed best way familiarise package view included documentation: vignette(\"qalytools\") provides introduction main functionality package. vignette(\"example_analysis\") illustrates use package part larger analysis.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/EQ5D5L_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"EQ-5D-5L multiple survey example data — EQ5D5L_surveys","title":"EQ-5D-5L multiple survey example data — EQ5D5L_surveys","text":"dataset containing dimension values vas score 1000 respondents across 10 surveys. Data synthetically generated.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/EQ5D5L_surveys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EQ-5D-5L multiple survey example data — EQ5D5L_surveys","text":"","code":"EQ5D5L_surveys"},{"path":"https://timtaylor.github.io/qalytools/reference/EQ5D5L_surveys.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"EQ-5D-5L multiple survey example data — EQ5D5L_surveys","text":"data frame 10000 rows 11 variables: surveyID Survey ID respondentID Respondent ID sex Respondent sex age Respondent age mobility Mobility dimension self_care Self-care dimension usual Usual activities dimension pain Pain/discomfort dimension anxiety Anxiety/depression dimension vas VAS score time_index Relative time within survey framework dummy Random roolean variable","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/as.data.frame.EQ5D.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an EQ5D object to a data frame — as.data.frame.EQ5D","title":"Coerce an EQ5D object to a data frame — as.data.frame.EQ5D","text":"Method convert EQ5D object data frame.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/as.data.frame.EQ5D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an EQ5D object to a data frame — as.data.frame.EQ5D","text":"","code":"# S3 method for EQ5D as.data.frame(x, row.names, optional, ...)"},{"path":"https://timtaylor.github.io/qalytools/reference/as.data.frame.EQ5D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an EQ5D object to a data frame — as.data.frame.EQ5D","text":"x EQ5D object. row.names currently used. optional currently used. ... currently used.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/as.data.frame.EQ5D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an EQ5D object to a data frame — as.data.frame.EQ5D","text":"data frame underlying EQ5D object. column names preserved attributes, including row names, dropped.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/as.data.frame.EQ5D.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Coerce an EQ5D object to a data frame — as.data.frame.EQ5D","text":"Apart x parameters used present method signature compatibility underlying generic.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/as.data.table.EQ5D.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an EQ5D object to a data.table — as.data.table.EQ5D","title":"Coerce an EQ5D object to a data.table — as.data.table.EQ5D","text":"Method convert EQ5D object data.table.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/as.data.table.EQ5D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an EQ5D object to a data.table — as.data.table.EQ5D","text":"","code":"# S3 method for EQ5D as.data.table(x, keep.rownames, ...)"},{"path":"https://timtaylor.github.io/qalytools/reference/as.data.table.EQ5D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an EQ5D object to a data.table — as.data.table.EQ5D","text":"x EQ5D object. keep.rownames currently used. ... currently used.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/as.data.table.EQ5D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an EQ5D object to a data.table — as.data.table.EQ5D","text":"data.table data(frame) underlying EQ5D object. column names preserved attributes, including row names, dropped.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/as.data.table.EQ5D.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Coerce an EQ5D object to a data.table — as.data.table.EQ5D","text":"Apart x parameters used present method signature compatibility underlying generic.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/as_eq5d.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to an EQ5D object — as_eq5d","title":"Coerce to an EQ5D object — as_eq5d","text":"Generic conversion EQ5D object. Methods provided data frame type objects.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/as_eq5d.html","id":"the-eq-d-class","dir":"Reference","previous_headings":"","what":"The EQ5D class","title":"Coerce to an EQ5D object — as_eq5d","text":"define EQ5D object data frame meets following criteria: contains columns represent dimensions EQ5D survey specification well column representing Visual Analogue Score. contains column acts unique respondent identifier another identifies different surveys time. Together uniquely identify response combination duplicated within data frame. EQ5D3L, EQ5D5L EQ5DY objects defined subclass EQ5D objects additional restriction  corresponding dimension columns x either NA whole numbers bounded 1 3 5 (depending survey type).","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/as_eq5d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to an EQ5D object — as_eq5d","text":"","code":"as_eq5d5l(x, ...)  # S3 method for default as_eq5d5l(x, ...)  # S3 method for tbl_df as_eq5d5l(   x,   respondentID,   surveyID,   mobility,   self_care,   usual,   pain,   anxiety,   vas,   ... )  # S3 method for data.table as_eq5d5l(   x,   respondentID,   surveyID,   mobility,   self_care,   usual,   pain,   anxiety,   vas,   ... )  # S3 method for data.frame as_eq5d5l(   x,   respondentID,   surveyID,   mobility,   self_care,   usual,   pain,   anxiety,   vas,   ... )  as_eq5d3l(x, ...)  # S3 method for default as_eq5d3l(x, ...)  # S3 method for tbl_df as_eq5d3l(   x,   respondentID,   surveyID,   mobility,   self_care,   usual,   pain,   anxiety,   vas,   ... )  # S3 method for data.table as_eq5d3l(x, ...)  # S3 method for data.frame as_eq5d3l(   x,   respondentID,   surveyID,   mobility,   self_care,   usual,   pain,   anxiety,   vas,   ... )  as_eq5dy(x, ...)  # S3 method for default as_eq5dy(x, ...)  # S3 method for tbl_df as_eq5dy(   x,   respondentID,   surveyID,   mobility,   self_care,   usual,   pain,   anxiety,   vas,   ... )  # S3 method for data.table as_eq5dy(   x,   respondentID,   surveyID,   mobility,   self_care,   usual,   pain,   anxiety,   vas,   ... )  # S3 method for data.frame as_eq5dy(   x,   respondentID,   surveyID,   mobility,   self_care,   usual,   pain,   anxiety,   vas,   ... )"},{"path":"https://timtaylor.github.io/qalytools/reference/as_eq5d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to an EQ5D object — as_eq5d","text":"x R object. ... arguments passed methods. respondentID [character] name variable x uniquely identifies respondents. surveyID [character] Name variable x uniquely identifies surveys time. avoid ambiguity specified variable either numeric factor (case order taken given factor levels). character variable x accepted converted, warning, via .factor(). variable exist within x created set NA_integer. mobility [character] Name 'mobility' dimension x. self_care [character] Name 'self-care' dimension x. usual [character] Name 'usual activities' dimension x. pain [character] Name 'pain / discomfort' dimension x. anxiety [character] Name 'anxiety / depression' dimension x. vas [character] Name 'visual analogue score' variable x.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/as_eq5d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce to an EQ5D object — as_eq5d","text":"EQ5D5L, EQ5D3L EQ5DY object.","code":""},{"path":[]},{"path":"https://timtaylor.github.io/qalytools/reference/as_eq5d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce to an EQ5D object — as_eq5d","text":"","code":"data(\"eq5d3l_example\") as_eq5d3l(     eq5d3l_example,     respondentID = \"respondentID\",     surveyID = \"surveyID\",     mobility = \"MO\",     self_care = \"SC\",     usual = \"UA\",     pain = \"PD\",     anxiety = \"AD\",     vas = \"vas\" ) #> # EQ-5D-3L: 200 x 10 #>       MO    SC    UA    PD    AD Group  surveyID respondentID   vas  time #>  * <int> <int> <int> <int> <int> <chr>  <fct>           <int> <dbl> <dbl> #>  1     1     1     2     2     1 Group1 survey01            1    67     0 #>  2     1     1     1     2     1 Group2 survey01            2    84     0 #>  3     2     2     3     3     1 Group1 survey01            3    17     0 #>  4     1     1     1     2     1 Group2 survey01            4    73     0 #>  5     1     2     2     2     1 Group1 survey01            5    60     0 #>  6     1     1     1     1     1 Group2 survey01            6    77     0 #>  7     2     1     2     2     1 Group1 survey01            7    74     0 #>  8     1     1     1     1     1 Group2 survey01            8    96     0 #>  9     1     2     2     2     1 Group1 survey01            9    69     0 #> 10     1     2     2     1     1 Group2 survey01           10    79     0 #> # … with 190 more rows"},{"path":"https://timtaylor.github.io/qalytools/reference/available_valuesets.html","id":null,"dir":"Reference","previous_headings":"","what":"Available value sets — available_valuesets","title":"Available value sets — available_valuesets","text":"Generic function lists value sets available.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/available_valuesets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available value sets — available_valuesets","text":"","code":"available_valuesets(x, ...)  # S3 method for default available_valuesets(x, ...)  # S3 method for EQ5D5L available_valuesets(x, ...)  # S3 method for EQ5D3L available_valuesets(x, ...)  # S3 method for EQ5DY available_valuesets(x, ...)  # S3 method for character available_valuesets(x, ...)"},{"path":"https://timtaylor.github.io/qalytools/reference/available_valuesets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Available value sets — available_valuesets","text":"x R object. ... arguments passed methods.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/available_valuesets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available value sets — available_valuesets","text":"data.frame containing available value sets given object survey type.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/available_valuesets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Available value sets — available_valuesets","text":"available_valuesets() returns available valuesets eq5d package. s3 generic wraps eq5d::valuesets() function providing additional methods eq5d character objects. character objects, input expected survey type various forms permitted: \"eq5d5l\", \"EQ5D5L\", \"eq-5d-5l\", \"EQ-5D-5L\", \"5L\", \"5l\" \"eq5d3l\", \"EQ5D3L\", \"eq-5d-3l\", \"EQ-5D-3L\", \"3L\", \"3l\" \"eq5dy\" , \"EQ5DY\" , \"eq-5d-y\" , \"EQ-5D-Y\" , \"Y\" , \"y\" called arguments value sets available  version, type country combination returned.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/available_valuesets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Available value sets — available_valuesets","text":"","code":"data(\"eq5d3l_example\") dat <- as_eq5d3l(     eq5d3l_example,     respondentID = \"respondentID\",     surveyID = \"surveyID\",     mobility = \"MO\",     self_care = \"SC\",     usual = \"UA\",     pain = \"PD\",     anxiety = \"AD\",     vas = \"vas\" ) available_valuesets(dat) #> # A data frame: 51 × 3 #>    Version  Type  Country   #>    <chr>    <chr> <chr>     #>  1 EQ-5D-3L TTO   Argentina #>  2 EQ-5D-3L TTO   Australia #>  3 EQ-5D-3L TTO   Brazil    #>  4 EQ-5D-3L TTO   Canada    #>  5 EQ-5D-3L TTO   Chile     #>  6 EQ-5D-3L TTO   China     #>  7 EQ-5D-3L TTO   Denmark   #>  8 EQ-5D-3L TTO   Ecuador   #>  9 EQ-5D-3L TTO   France    #> 10 EQ-5D-3L TTO   Germany   #> # … with 41 more rows available_valuesets(\"eq5d5l\") #> # A data frame: 51 × 3 #>    Version  Type  Country  #>    <chr>    <chr> <chr>    #>  1 EQ-5D-5L VT    Belgium  #>  2 EQ-5D-5L VT    Canada   #>  3 EQ-5D-5L VT    China    #>  4 EQ-5D-5L VT    Denmark  #>  5 EQ-5D-5L VT    Egypt    #>  6 EQ-5D-5L VT    England  #>  7 EQ-5D-5L VT    Ethiopia #>  8 EQ-5D-5L VT    France   #>  9 EQ-5D-5L VT    Germany  #> 10 EQ-5D-5L VT    HongKong #> # … with 41 more rows"},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_limitation.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate limitation — calculate_limitation","title":"Calculate limitation — calculate_limitation","text":"Generic function calculates limitation survey responses across response dimensions. Methods provided eq5d objects.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_limitation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate limitation — calculate_limitation","text":"","code":"calculate_limitation(x, ...)  # S3 method for default calculate_limitation(x, ...)  # S3 method for EQ5D calculate_limitation(x, ...)"},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_limitation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate limitation — calculate_limitation","text":"x R object. ... arguments passed methods.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_limitation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate limitation — calculate_limitation","text":"data frame fraction individuals without limitation.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_limitation.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate limitation — calculate_limitation","text":"define limitation dimension value equal 1.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_limitation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate limitation — calculate_limitation","text":"","code":"data(\"eq5d3l_example\") dat <- as_eq5d3l(     eq5d3l_example,     respondentID = \"respondentID\",     surveyID = \"surveyID\",     mobility = \"MO\",     self_care = \"SC\",     usual = \"UA\",     pain = \"PD\",     anxiety = \"AD\",     vas = \"vas\" ) calculate_limitation(dat) #> # A data frame: 5 × 3 #>   surveyID dimension without_limitation #>   <fct>    <fct>                  <dbl> #> 1 survey01 MO                     0.525 #> 2 survey01 SC                     0.6   #> 3 survey01 UA                     0.395 #> 4 survey01 PD                     0.17  #> 5 survey01 AD                     0.655"},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_pchc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Paretian Classification of Health Change — calculate_pchc","title":"Calculate the Paretian Classification of Health Change — calculate_pchc","text":"calculate_pchc() calculates Paretian Classification Health Change (PCHC) individuals health state two surveys. wraps eq5d::pchc() function providing methods EQ5D objects.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_pchc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Paretian Classification of Health Change — calculate_pchc","text":"","code":"calculate_pchc(pre, post, no.problems = TRUE, by.dimension = FALSE)"},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_pchc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Paretian Classification of Health Change — calculate_pchc","text":"pre EQ5D object single survey. post EQ5D object single survey. .problems boolean. Summarise 11111 \"change\" subjects \"problems\"  group. .dimension boolean. Summarise results EQ-5D dimension rather  whole dataset.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_pchc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Paretian Classification of Health Change — calculate_pchc","text":".dimension = FALSE: data frame columns 'Change', 'Number' 'Percent'. .dimension = TRUE: data frame columns 'Dimension', 'Change', 'Number' 'Percent'.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_pchc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Paretian Classification of Health Change — calculate_pchc","text":"","code":"data(\"eq5d3l_example\") dat <- as_eq5d3l(     eq5d3l_example,     respondentID = \"respondentID\",     surveyID = \"surveyID\",     mobility = \"MO\",     self_care = \"SC\",     usual = \"UA\",     pain = \"PD\",     anxiety = \"AD\",     vas = \"vas\",     drop = FALSE ) grp1 <- subset(dat, Group == \"Group1\") grp2 <- subset(dat, Group == \"Group2\") calculate_pchc(grp1, grp2) #> # A data frame: 5 × 3 #>   Change       Number Percent #>   <chr>         <dbl>   <dbl> #> 1 No change        14      14 #> 2 Improve          59      59 #> 3 Worsen           14      14 #> 4 Mixed change     13      13 #> 5 No problems       0       0 calculate_pchc(grp1, grp2, by.dimension = TRUE) #> # A data frame: 20 × 4 #>    .Dimension Change      Number Percent #>    <chr>      <chr>        <dbl>   <dbl> #>  1 MO         No change       31      31 #>  2 MO         Improve         26      26 #>  3 MO         Worsen           7       7 #>  4 MO         No problems     36      36 #>  5 SC         No change       21      21 #>  6 SC         Improve         31      31 #>  7 SC         Worsen           7       7 #>  8 SC         No problems     41      41 #>  9 UA         No change       33      33 #> 10 UA         Improve         43      43 #> 11 UA         Worsen           6       6 #> 12 UA         No problems     18      18 #> 13 PD         No change       59      59 #> 14 PD         Improve         34      34 #> 15 PD         Worsen           3       3 #> 16 PD         No problems      4       4 #> 17 AD         No change       14      14 #> 18 AD         Improve         22      22 #> 19 AD         Worsen          12      12 #> 20 AD         No problems     52      52"},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_qalys.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate quality of life years — calculate_qalys","title":"Calculate quality of life years — calculate_qalys","text":"Generic calculating quality life years (QALY) metrics EQ5D survey respondents.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_qalys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate quality of life years — calculate_qalys","text":"","code":"calculate_qalys(x, ...)  # S3 method for default calculate_qalys(x, ...)  # S3 method for EQ5D calculate_qalys(   x,   time_index,   type,   country,   units = c(\"days\", \"weeks\", \"months\", \"quarters\", \"years\"),   baseline_survey = NULL,   ... )  # S3 method for utility calculate_qalys(   x,   time_index,   units = c(\"days\", \"weeks\", \"months\", \"quarters\", \"years\"),   baseline_survey = NULL,   ... )"},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_qalys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate quality of life years — calculate_qalys","text":"x R object. ... arguments passed methods. time_index [character] Name variable x representing relative time within survey framework. type [character] Method type(s) used calculating value sets. EQ5D3L inputs can : \"TTO\", time trade-valuation technique; \"VAS\", visual analogue scale valuation technique; \"RCW\", reverse crosswalk conversion EQ5D5L values; \"DSU\", NICE Decision Support Unit's model allows mappings EQ5D5L values accounting age sex. EQ5D5L inputs can : \"VT\",  value sets generated via EuroQol standardised valuation study protocol; \"CW\",  crosswalk conversion EQ5D3L values; \"DSU\", NICE Decision Support Unit's model allows mappings EQ5D5L values accounting age sex. country [character] Value set countries use. units character units time_index column x. Can one \"days\", \"weeks\", \"months\", \"quarters\" \"years\". Note output always QALY (.e years) irrespective unit input. baseline_survey (optional) Either character string specifying surveyID, use baseline data frame. data frame, must least two columns; one respondentID (name matching x input) another (name) associated utility values. desired can also specify columns match utility country type columns input x.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_qalys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate quality of life years — calculate_qalys","text":"data frame.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_qalys.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate quality of life years — calculate_qalys","text":"methods provided utility  EQ5D objects, return two metrics default: Firstly, raw QALY. area utility curve scaled proportion year corresponds . Secondly, loss_v_fullhealth value. represents loss perfect health calculated assuming dimensions 1 calculate full health QALY value. Optionally, third metric can also returned, loss_v_baseline. represents loss specified baseline utility value.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_qalys.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate quality of life years — calculate_qalys","text":"character string baseline_survey argument given must match surveyID match .  situation survey still included unadjusted, raw, calculation, prior calculation loss. Alternatively baseline_survey argument can specified data frame column corresponding respondentID another representing associated utility. Optionally columns corresponding utility country utility type can included allow granular comparisons. specification baseline, included unadjusted, raw, calculation.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_qalys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate quality of life years — calculate_qalys","text":"","code":"data(\"EQ5D5L_surveys\") dat <- as_eq5d5l(     EQ5D5L_surveys,     surveyID = \"surveyID\",     respondentID = \"respondentID\",     mobility = \"mobility\",     self_care = \"self_care\",     usual = \"usual\",     pain = \"pain\",     anxiety = \"anxiety\",     vas = \"vas\" ) #> Warning: `surveyID` has been converted to an ordered factor with default levels #> equivalent to `sort(unique(surveyID))`. calculate_qalys(     dat,     time_index = \"time_index\",     type = \"VT\", country = c(\"Denmark\", \"France\") ) #> # A data frame: 4,000 × 5 #>    respondentID .utility_type .utility_country .qaly .value #>           <int> <chr>         <chr>            <chr>  <dbl> #>  1            1 VT            Denmark          raw    0.544 #>  2            1 VT            France           raw    0.573 #>  3            2 VT            Denmark          raw    0.487 #>  4            2 VT            France           raw    0.503 #>  5            3 VT            Denmark          raw    0.530 #>  6            3 VT            France           raw    0.577 #>  7            4 VT            Denmark          raw    0.276 #>  8            4 VT            France           raw    0.430 #>  9            5 VT            Denmark          raw    0.506 #> 10            5 VT            France           raw    0.575 #> # … with 3,990 more rows"},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_utility.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate utility — calculate_utility","title":"Calculate utility — calculate_utility","text":"Generic function calculates EQ5D index scores given value sets.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_utility.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate utility — calculate_utility","text":"","code":"calculate_utility(x, type, country, ...)  # S3 method for default calculate_utility(x, type, country, ...)  # S3 method for EQ5D5L calculate_utility(   x,   type = \"VT\",   country = \"England\",   drop = TRUE,   age = NULL,   sex = NULL,   ... )  # S3 method for EQ5D3L calculate_utility(   x,   type = \"VT\",   country = \"England\",   drop = TRUE,   age = NULL,   sex = NULL,   ... )  # S3 method for EQ5DY calculate_utility(   x,   type = \"VT\",   country = \"England\",   drop = TRUE,   age = NULL,   sex = NULL,   ... )  add_utility(x, type, country, ...)  # S3 method for default add_utility(x, type, country, ...)  # S3 method for EQ5D5L add_utility(x, type = \"VT\", country = \"England\", age = NULL, sex = NULL, ...)  # S3 method for EQ5D3L add_utility(x, type = \"VT\", country = \"England\", age = NULL, sex = NULL, ...)  # S3 method for EQ5DY add_utility(x, type = \"VT\", country = \"England\", age = NULL, sex = NULL, ...)"},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_utility.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate utility — calculate_utility","text":"x R object. type [character] Method type(s) used calculating value sets. EQ5D3L inputs can : \"TTO\", time trade-valuation technique; \"VAS\", visual analogue scale valuation technique; \"RCW\", reverse crosswalk conversion EQ5D5L values; \"DSU\", NICE Decision Support Unit's model allows mappings EQ5D5L values accounting age sex. EQ5D5L inputs can : \"VT\",  value sets generated via EuroQol standardised valuation study protocol; \"CW\",  crosswalk conversion EQ5D3L values; \"DSU\", NICE Decision Support Unit's model allows mappings EQ5D5L values accounting age sex. country [character] Value set countries use. ... arguments passed methods. drop [logical] TRUE (default), columns corresponding surveyID respondentID kept input x. age [character] Column x representing age, years, respondent. used type = \"DSU\". sex [character] Column x representing sex, years, respondent. used type = \"DSU\". Column entries must one \"Male\", \"M\", \"Female\" \"F\" (case insensitive).","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_utility.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate utility — calculate_utility","text":"data frame utility values linked responses.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_utility.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate utility — calculate_utility","text":"calculate_utility() returns utility index scores given object value set combination. Methods wrap functionality eq5d package provided EQ5D objects. add_utility() wrapper around calculate_utility() keeps columns input data x.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_utility.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate utility — calculate_utility","text":"methods eq5d objects expect type country length recycle length one common size.","code":""},{"path":[]},{"path":"https://timtaylor.github.io/qalytools/reference/calculate_utility.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate utility — calculate_utility","text":"","code":"data(\"eq5d3l_example\") dat <- as_eq5d3l(     eq5d3l_example,     respondentID = \"respondentID\",     surveyID = \"surveyID\",     mobility = \"MO\",     self_care = \"SC\",     usual = \"UA\",     pain = \"PD\",     anxiety = \"AD\",     vas = \"vas\" ) calculate_utility(dat, type = \"TTO\", country = c(\"UK\", \"Germany\")) #> # A data frame: 400 × 5 #>    respondentID surveyID .utility_country .utility_type .value #>  *        <int> <fct>    <chr>            <chr>          <dbl> #>  1            1 survey01 UK               TTO            0.76  #>  2            2 survey01 UK               TTO            0.796 #>  3            3 survey01 UK               TTO           -0.003 #>  4            4 survey01 UK               TTO            0.796 #>  5            5 survey01 UK               TTO            0.656 #>  6            6 survey01 UK               TTO            1     #>  7            7 survey01 UK               TTO            0.691 #>  8            8 survey01 UK               TTO            1     #>  9            9 survey01 UK               TTO            0.656 #> 10           10 survey01 UK               TTO            0.779 #> # … with 390 more rows"},{"path":"https://timtaylor.github.io/qalytools/reference/eq5d3l_example.html","id":null,"dir":"Reference","previous_headings":"","what":"EQ-5D-3L example data — eq5d3l_example","title":"EQ-5D-3L example data — eq5d3l_example","text":"dataset containing dimensions grouping 200 observations. Data obtained eq5d package 2022-06-15, additional variables added package compatibility.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/eq5d3l_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EQ-5D-3L example data — eq5d3l_example","text":"","code":"eq5d3l_example"},{"path":"https://timtaylor.github.io/qalytools/reference/eq5d3l_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"EQ-5D-3L example data — eq5d3l_example","text":"data frame 200 rows 6 variables: respondentID Unique respondent identifier surveyID Unique survey identifier MO Mobility dimension valuea SC Self-care dimension values UA Usual activities dimension values PD Pain/discomfort dimension values AD Anxiety/depression dimension values Group Observation group vas VAS score time Relative time within survey framework","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/eq5d3l_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"EQ-5D-3L example data — eq5d3l_example","text":"https://github.com/fragla/eq5d/raw/master/inst/extdata/eq5d3l_example.xlsx","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/new_eq5d.html","id":null,"dir":"Reference","previous_headings":"","what":"EQ5D constructors and validators — new_eq5d","title":"EQ5D constructors and validators — new_eq5d","text":"new_eq5d3l(), new_eq5d5l() new_eq5dy() developer facing functions construction EQ5D objects perform minimal checking input data. normally followed call validate_eq5d() ensure assumptions underlying data valid.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/new_eq5d.html","id":"the-eq-d-class","dir":"Reference","previous_headings":"","what":"The EQ5D class","title":"EQ5D constructors and validators — new_eq5d","text":"define EQ5D object data frame meets following criteria: contains columns represent dimensions EQ5D survey specification well column representing Visual Analogue Score. contains column acts unique respondent identifier another identifies different surveys time. Together uniquely identify response combination duplicated within data frame. EQ5D3L, EQ5D5L EQ5DY objects defined subclass EQ5D objects additional restriction  corresponding dimension columns x either NA whole numbers bounded 1 3 5 (depending survey type).","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/new_eq5d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EQ5D constructors and validators — new_eq5d","text":"","code":"new_eq5d3l(     x,     respondentID, surveyID,     mobility, self_care, usual, pain, anxiety,     vas )  new_eq5d3l(     x,     respondentID, surveyID,     mobility, self_care, usual, pain, anxiety,     vas )  new_eq5dy(     x,     respondentID, surveyID,     mobility, self_care, usual, pain, anxiety,     vas )  validate_eq5d(x, version)  validate_eq5d3l(x)  validate_eq5d5l(x)  validate_eq5dy(x)"},{"path":"https://timtaylor.github.io/qalytools/reference/new_eq5d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EQ5D constructors and validators — new_eq5d","text":"x [data.frame] EQ5D survey data. respondentID [character] name variable x uniquely identifies respondents. surveyID [character] Name variable x uniquely identifies surveys time. avoid ambiguity specified variable must either numeric factor (case  order taken given  factor levels). mobility [character] Name 'mobility' dimension x. self_care [character] Name 'self-care' dimension x. usual [character] Name 'usual activities' dimension x. pain [character] Name 'pain / discomfort' dimension x. anxiety [character] Name 'anxiety / depression' dimension x. vas [character] Name 'visual analogue score' variable x. version [character] EQ5D version. One \"3L\", \"5L\" \"Y\".","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/new_eq5d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EQ5D constructors and validators — new_eq5d","text":"EQ5D3L, EQ5D5L EQ5D3Y object (invisibly corresponding validation functions).","code":""},{"path":[]},{"path":"https://timtaylor.github.io/qalytools/reference/new_eq5d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EQ5D constructors and validators — new_eq5d","text":"","code":"data(\"EQ5D5L_surveys\") dat <- EQ5D5L_surveys dat$surveyID <- factor(dat$surveyID)  res <- new_eq5d5l(dat,     respondentID = \"respondentID\",     surveyID = \"surveyID\",     mobility = \"mobility\",     self_care = \"self_care\",     usual = \"usual\",     pain = \"pain\",     anxiety = \"anxiety\",     vas = \"vas\" )  validate_eq5d(res, version = \"5L\") validate_eq5d5l(res) try(validate_eq5d3l(res)) #> Error in validate_eq5d(x, version = \"3L\") :  #>   Dimensions must be either bounded by 1 and 3, or NA try(validate_eq5d(res, version = \"3L\")) #> Error in validate_eq5d(res, version = \"3L\") :  #>   Dimensions must be either bounded by 1 and 3, or NA"},{"path":"https://timtaylor.github.io/qalytools/reference/new_utility.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility constructor and validator — new_utility","title":"Utility constructor and validator — new_utility","text":"Construct validate utility objects.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/new_utility.html","id":"the-utility-class","dir":"Reference","previous_headings":"","what":"The utility class","title":"Utility constructor and validator — new_utility","text":"utility object contains object meets following criteria: contains column acts unique respondent identifier another identifies different surveys time. contains additional columns represent country, type value utility previously calculated. Together, combination respondent identifier, survey identifier, utility country utility type unique duplicated across rows.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/new_utility.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility constructor and validator — new_utility","text":"","code":"new_utility(x, respondentID, surveyID, country, type, value)  validate_utility(xx)"},{"path":"https://timtaylor.github.io/qalytools/reference/new_utility.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility constructor and validator — new_utility","text":"x [data.frame]. respondentID [character] Unique respondent identifier. name variable x uniquely identifies respondents. surveyID [character] Name variable x uniquely identifies surveys time. avoid ambiguity specified variable must either numeric factor (case order taken given factor levels). country [character] Name variable x representing utility country. type [character] Name variable x representing utility country. value [character] Name variable x representing utility value. xx R Object validate.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/new_utility.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility constructor and validator — new_utility","text":"utility object (invisibly validate_utility()).","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/new_utility.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility constructor and validator — new_utility","text":"new_utility() creates utility object minimal checking input arguments. mainly developer use normally accompanied call validate_utility() performs checking underlying data.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/qalytools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Tools for Analysing EQ5D Surveys — qalytools-package","title":"Tools for Analysing EQ5D Surveys — qalytools-package","text":"qalytools provides simple intuitive user interface analysis repeated EQ-5D surveys, facilitating calculation QALY values related metrics. package provides range functions: Constructors (validators) EQ5D data frame subclasses (EQ5D3L, EQ5D5L EQ5D): new_eq5d3l() (validate_eq5d3l()), new_eq5d5l() (validate_eq5d5l()) new_eq5dy() (validate_eq5dy()). User-friendly coercion functions as_eq5d3l(), as_eq5d5l() as_eq5dy(). calculation utility values based range different value sets. functionality provided via calculate_utility(), add_utility() available_valuesets() functions wrappers around eq5d package. calculation different Quality Life Years (QALY) metrics including unadjusted 'raw' values, disutility perfect health , optionally, specified baseline. See calculate_qalys(). calculation Paretian Classification Health Change (PCHC) individual's health state two surveys via calculate_pchc() (wrapping eq5d package). Easy calculation responses health limitation (.e. non-one response one dimensions) via calculate_limitation(). See vignette(\"qalytools\") introduction main functionality package vignette(\"example_analysis\") illustration package can used part larger analysis.","code":""},{"path":[]},{"path":"https://timtaylor.github.io/qalytools/reference/qalytools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tools for Analysing EQ5D Surveys — qalytools-package","text":"Maintainer: Tim Taylor timothy.taylor@ukhsa.gov.uk (ORCID) contributors: Crown Copyright [copyright holder, funder]","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/s3_register.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a method for a suggested dependency — s3_register","title":"Register a method for a suggested dependency — s3_register","text":"Generally, recommend way register S3 method use S3Method() namespace directive (often generated automatically @export roxygen2 tag). However, technique requires generic imported package, sometimes want suggest package, provide method package loaded. s3_register() can called package's .onLoad() dynamically register method generic's package loaded.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/s3_register.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a method for a suggested dependency — s3_register","text":"generic Name generic form pkg::generic. class Name class method Optionally, implementation method. default, found looking function called generic.class package environment. Note providing method can dangerous use devtools. namespace method reloaded devtools::load_all(), function keep inheriting old namespace. might cause crashes dangling .Call() pointers.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/s3_register.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Register a method for a suggested dependency — s3_register","text":"R 3.5.0 later, s3_register() also useful demonstrating class creation vignette, since method lookup longer always involves lexical scope. R 3.6.0 later, can achieve similar effect using \"delayed method registration\", .e. placing following NAMESPACE file:","code":"if (getRversion() >= \"3.6.0\") {   S3method(package::generic, class) }"},{"path":"https://timtaylor.github.io/qalytools/reference/s3_register.html","id":"usage-in-other-packages","dir":"Reference","previous_headings":"","what":"Usage in other packages","title":"Register a method for a suggested dependency — s3_register","text":"avoid taking dependency vctrs, copy source s3_register() package. licensed permissive unlicense make crystal clear happy . need include license even credit us using function.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/s3_register.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register a method for a suggested dependency — s3_register","text":"","code":"# A typical use case is to dynamically register tibble/pillar methods # for your class. That way you avoid creating a hard dependency on packages # that are not essential, while still providing finer control over # printing when they are used.  .onLoad <- function(...) {     s3_register(\"pillar::pillar_shaft\", \"vctrs_vctr\")     s3_register(\"tibble::type_sum\", \"vctrs_vctr\") }"},{"path":"https://timtaylor.github.io/qalytools/reference/summary.EQ5D.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for eq5d objects — summary.EQ5D","title":"Summary method for eq5d objects — summary.EQ5D","text":"Provides summary dimension values survey ID.","code":""},{"path":"https://timtaylor.github.io/qalytools/reference/summary.EQ5D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for eq5d objects — summary.EQ5D","text":"","code":"# S3 method for EQ5D summary(object, ..., tidy = FALSE)"},{"path":"https://timtaylor.github.io/qalytools/reference/summary.EQ5D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for eq5d objects — summary.EQ5D","text":"object EQ5D object. ... currently used. tidy [logical] results returned single, \"tidy\", table long format. FALSE, output list frequency / proportion tables split survey ID.","code":""},{"path":"https://timtaylor.github.io/qalytools/news/index.html","id":"qalytools-0029000","dir":"Changelog","previous_headings":"","what":"qalytools 0.0.2.9000","title":"qalytools 0.0.2.9000","text":"WIP - Package active development!","code":""}]
